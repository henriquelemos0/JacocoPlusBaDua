<?xml version="1.0"?>
<project name="Ant-Test" default="junit" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath path="/home/louiz/Integration/jacoco-0.7.0/jacoco/target/jacocoant.jar" />
  </taskdef>
  <!-- Sets variables which can later be used. -->
  <!-- The value of a property is accessed via ${} -->

  <property name="src.dir" location="src/main/java" />
  <property name="build.dir" location="target/classes" />

  <property name="src-test.dir" location="src/test/java" />
  <property name="build-test.dir" location="target/test-classes" />
  

  <!-- Define the classpath which includes the junit.jar and the classes after compiling-->
  <path id="junit.class.path">
    <pathelement location="lib/junit.jar" />
    <pathelement location="lib/hamcrest-core-1.3.jar" />
    <pathelement location="target/test-classes"/>
  </path>

  <!-- path to non-instrumented classes-->
  <path id="classes.path">
    <pathelement location="target/classes"/>
  </path>
  
  <!-- Deletes the existing build, docs and dist directory-->
  <target name="clean">
    <delete dir="${basedir}/target" />
    <delete dir="${basedir}/report" />
  </target>

  <!-- Creates the  build, docs and dist directory-->
  <target name="makedir" depends="clean">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${build-test.dir}" />
  </target>

  <!-- Compiles the java code -->
  <target name="compile" depends="makedir">
    <javac srcdir="${src.dir}" destdir="${build.dir}" debug="true">
      <classpath refid="junit.class.path" />
    </javac>
  </target>

   <target name="compile-test" depends="compile">
    <javac srcdir="${src-test.dir}" destdir="${build-test.dir}" debug="true">
      <classpath refid="junit.class.path" />
      <classpath refid="classes.path" />
    </javac>
  </target>

  <!-- Run the JUnit Tests -->
  <target name="test-dataflow" depends="compile-test">
    <jacoco:coverage-dataflow>
      <junit printsummary="on" fork="true" haltonfailure="yes">
        <classpath refid="junit.class.path" />
        <classpath refid="classes.path" />
        <formatter type="plain" />
        <batchtest todir="${basedir}/target/">
          <fileset dir="${src-test.dir}">
            <include name="**/*Test*.java" />
          </fileset>
        </batchtest>
      </junit>
    </jacoco:coverage-dataflow>
    <java jar="/home/louiz/Integration/jacoco-0.7.0/org.jacoco.dataflow/target/ba-dua-0.0.3-all.jar" fork="true">
      <arg value="report"/>
      <arg value="--all"/>
      <arg value="-classes"/>
      <arg value="./target/classes/"/>
      <arg value="-input"/>
      <arg value="coverage.ser"/>
    </java>
  </target>

   <!-- Run the JUnit Tests -->
  <target name="test" depends="compile-test">
    <jacoco:coverage>
      <junit printsummary="on" fork="true" haltonfailure="yes">
        <classpath refid="junit.class.path" />
        <classpath refid="classes.path" />
        <formatter type="plain" />
        <sysproperty key="output.file" value="coverage.ser"/>
        <batchtest todir="${basedir}/target/">
          <fileset dir="${src-test.dir}">
            <include name="**/*Test*.java" />
          </fileset>
        </batchtest>
      </junit>
    </jacoco:coverage>
  </target>

  <target name="report" description="o Create a Coverage Report" depends="test">
    <jacoco:report>      
      <executiondata>
          <file file="jacoco.exec"/>
      </executiondata>
      <structure name="Report">
          <classfiles>
              <fileset dir="target/classes"/>
          </classfiles>
          <sourcefiles encoding="UTF-8">
              <fileset dir="src/main/java"/>
          </sourcefiles>
      </structure>           
      <html destdir="report"/>           
    </jacoco:report>
  </target>

</project> 